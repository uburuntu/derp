[project]
name = "derp"
version = "0.1.0"
description = "AI-powered friendly Telegram bot"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "aiocache==0.12.3",
    "aiogram[fast,i18n,redis]==3.22.0",
    "aiojobs==1.4.0",
    "babel==2.17.0",
    "gel==3.1.0",
    "google-genai==1.38.0",
    "logfire[aiohttp,httpx,system-metrics]==4.7.0",
    "pydantic==2.11.9",
    "pydantic-settings==2.10.1",
    "throttler==1.2.2",
]

[dependency-groups]
dev = [
    "pytest>=8.3.5",
    "pytest-asyncio>=0.26.0",
    "ruff>=0.13.1",
    "uv>=0.8.19",
]

[tool.pytest.ini_options]
asyncio_default_fixture_loop_scope = "function"

[tool.ruff]
extend-exclude = [
    "derp/queries",  # Generated code
]

target-version = "py313"

[tool.ruff.lint]
# Extend Ruff's default rules (E4, E7, E9, F) with additional quality rules
extend-select = [
    "W",    # pycodestyle warnings
    "B",    # flake8-bugbear (common bugs)
    "C4",   # flake8-comprehensions
    "I",    # isort (import sorting)
    "UP",   # pyupgrade (modernize syntax)
    "N",    # pep8-naming
    "A",    # flake8-builtins
    "S",    # flake8-bandit (security)
    "T20",  # flake8-print
]

ignore = ["S311"]

# Allow unused variables when underscore-prefixed
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Per-file ignores for common patterns
[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # Allow unused imports in __init__.py
"tests/*" = ["S101", "T20"]  # Allow assert and print in tests
"scripts/*" = ["T20"]  # Allow print in scripts
