# AUTOGENERATED FROM 'derp/queries/update_bot_update_handled.edgeql' WITH:
#     $ gel-py


from __future__ import annotations
import dataclasses
import gel
import uuid


class NoPydanticValidation:
    @classmethod
    def __get_pydantic_core_schema__(cls, _source_type, _handler):
        # Pydantic 2.x
        from pydantic_core.core_schema import any_schema

        return any_schema()

    @classmethod
    def __get_validators__(cls):
        # Pydantic 1.x
        from pydantic.dataclasses import dataclass as pydantic_dataclass

        _ = pydantic_dataclass(cls)
        cls.__pydantic_model__.__get_validators__ = lambda: []
        return []


@dataclasses.dataclass
class UpdateBotUpdateHandledResult(NoPydanticValidation):
    id: uuid.UUID


async def update_bot_update_handled(
    executor: gel.AsyncIOExecutor,
    *,
    handled: bool,
    bot_update_id: uuid.UUID,
) -> UpdateBotUpdateHandledResult | None:
    return await executor.query_single(
        """\
        # Update BotUpdate handled status by id
        update telegram::BotUpdate
        filter .id = <uuid>$bot_update_id
        set {
            handled := <bool>$handled
        };\
        """,
        handled=handled,
        bot_update_id=bot_update_id,
    )
