# AUTOGENERATED FROM 'derp/queries/select_active_updates.edgeql' WITH:
#     $ gel-py -I uburuntu/derp


from __future__ import annotations
import dataclasses
import gel
import uuid


class NoPydanticValidation:
    @classmethod
    def __get_pydantic_core_schema__(cls, _source_type, _handler):
        # Pydantic 2.x
        from pydantic_core.core_schema import any_schema
        return any_schema()

    @classmethod
    def __get_validators__(cls):
        # Pydantic 1.x
        from pydantic.dataclasses import dataclass as pydantic_dataclass
        _ = pydantic_dataclass(cls)
        cls.__pydantic_model__.__get_validators__ = lambda: []
        return []


@dataclasses.dataclass
class SelectActiveUpdatesResult(NoPydanticValidation):
    id: uuid.UUID
    raw_data: str


async def select_active_updates(
    executor: gel.AsyncIOExecutor,
    *,
    chat_id: int,
    limit: int,
) -> list[SelectActiveUpdatesResult]:
    return await executor.query(
        """\
        # Select the most recent ActiveUpdates per chat_id, then sort them in ascending order (oldest first)
        with recent_updates := (
            select telegram::ActiveBotUpdates
            filter .chat.chat_id = <int64>$chat_id
            order by .created_at desc
            limit <int64>$limit
        )
        select recent_updates {
            raw_data,
        }
        order by .created_at asc;\
        """,
        chat_id=chat_id,
        limit=limit,
    )
