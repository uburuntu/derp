# AUTOGENERATED FROM 'derp/queries/mark_message_log_deleted.edgeql' WITH:
#     $ gel-py -I uburuntu/derp


from __future__ import annotations
import dataclasses
import datetime
import gel
import uuid


class NoPydanticValidation:
    @classmethod
    def __get_pydantic_core_schema__(cls, _source_type, _handler):
        # Pydantic 2.x
        from pydantic_core.core_schema import any_schema
        return any_schema()

    @classmethod
    def __get_validators__(cls):
        # Pydantic 1.x
        from pydantic.dataclasses import dataclass as pydantic_dataclass
        _ = pydantic_dataclass(cls)
        cls.__pydantic_model__.__get_validators__ = lambda: []
        return []


@dataclasses.dataclass
class MarkMessageLogDeletedResult(NoPydanticValidation):
    id: uuid.UUID


async def mark_message_log_deleted(
    executor: gel.AsyncIOExecutor,
    *,
    when: datetime.datetime,
    message_key: str,
) -> MarkMessageLogDeletedResult | None:
    return await executor.query_single(
        """\
        # Mark a message as deleted in telegram::MessageLog by message_key

        update telegram::MessageLog
        filter .message_key = <str>$message_key
        set { deleted_at := <datetime>$when };\
        """,
        when=when,
        message_key=message_key,
    )
